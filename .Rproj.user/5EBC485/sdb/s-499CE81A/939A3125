{
    "contents" : "# Reproducible Research: Peer Assessment 1\n### Student: Michael Graef\n\n## Loading and preprocessing the data\nAssumes the data is in the working directory in zipped format.  \nUnzip data and read into variable 'activity'\n```{r}\nfn<-\"activity.zip\"\nunzip(fn)\n\nactivity<-read.table(\"activity.csv\",sep=\",\",header=TRUE,stringsAsFactors=FALSE)\n```\n\n\n\n## What is mean total number of steps taken per day?\n### Create table 'stepsbydate' which contains the total steps taken for each day.  \nIgnore NA's for now.\n```{r}\nstepsbydate<-aggregate(steps ~ date, data=activity, sum, na.action=na.omit)\n```\n\n### Plot the total number of steps taken each day.\n```{r barplot,fig.width=10}\nbarplot(stepsbydate$steps,\n        main=\"Total steps taken each day\",\n        ylab=\"Steps\",\n        xlab=\"Date\",\n        names.arg=stepsbydate$date)\n```\n\n### Calculate mean & median steps taken per day.\nIgnore NA's for now.\n```{r}\nmeansteps<-mean(stepsbydate$steps)\nmediansteps<-median(stepsbydate$steps)\n```\n\nMean steps taken per day is `r meansteps`.  \nMedian steps taken per day is `r mediansteps`.  \n\n\n## What is the average daily activity pattern?\n### Create table 'stepsbyinterval' which contains the mean steps taken in each interval across all days.  \nIgnore NA's for now.\n```{r}\nstepsbyinterval<-aggregate(steps ~ interval, data=activity, mean, na.action=na.omit)\n```\n\n### Plot the mean steps taken in each interval\n```{r plot,fig.width=10}\nplot(stepsbyinterval$interval, stepsbyinterval$steps, type=\"l\",\n     main=\"Mean steps taken during each 5-minute interval\",\n     ylab=\"Steps\", xlab=\"Interval\")\n```\n\n### Find the interval with the maximum average number of steps\n```{r}\nmaxsteps<-max(stepsbyinterval$steps)\nmaxstepsinterval<-stepsbyinterval[stepsbyinterval$steps==maxsteps,1]\n```\n\nMaximum average steps is `r maxsteps` which occurs in interval `r maxstepsinterval`.\n\n## Imputing missing values\n### Find the NA's in the original activity dataset.  Count the number of occurrences.\n```{r}\nactivityNA<-activity[is.na(activity$steps),]\nactivityNAcount<-nrow(activityNA)\n```\n\nNumber of rows in activity.csv with NA values for steps is `r activityNAcount`.\n\n### Impute missing values in activity\nUse the average number of steps by interval (i.e. for all missing values, use the value from the corresponding interval in table 'stepsbyinterval', calculated above, containing mean values)  \nBuild a new activity table with these values\n```{r}\nnewactivity<-activity\nfor(i in 1:nrow(newactivity)) {\n    if(is.na(newactivity[i,\"steps\"])) {\n        newactivity[i,\"steps\"]<-stepsbyinterval[stepsbyinterval$interval==newactivity[i,\"interval\"],]$steps\n    }\n}\n```\n\n### Create table 'stepsbydate' which contains the total steps taken for each day.  \n```{r}\nnewstepsbydate<-aggregate(steps ~ date, data=newactivity, sum)\n```\n\n### Plot the total number of steps taken each day.\n```{r newbarplot,fig.width=10}\nbarplot(newstepsbydate$steps,\n        main=\"Total steps taken each day. NA's replaced with averages.\",\n        ylab=\"Steps\",\n        xlab=\"Date\",\n        names.arg=newstepsbydate$date)\n```\n\n### Calculate mean & median steps taken per day.\n```{r}\nnewmeansteps<-mean(newstepsbydate$steps)\nnewmediansteps<-median(newstepsbydate$steps)\n```\n\nMean steps taken per day is `r newmeansteps`. (using imputed values for NA's)  \nMedian steps taken per day is `r newmediansteps`.  (using imputed values for NA's)\n\n### Calculate change in mean & median steps between original and new activity datasets\n```{r}\nchangemean<-newmeansteps-meansteps\nchangemedian=newmediansteps-mediansteps\n```\nMean steps before NA's replaced of `r meansteps` changed by `r changemean` to `r newmeansteps`.  \nMedian steps before NA's replaced of `r mediansteps` changed by `r changemedian` to `r newmediansteps`.\n\n*Because of the method used to impute the missing values, and because missing values were for complete days, all days with missing values received the same number of steps.  This kept the mean exactly the same for the old & new datasets.*  \n\n\n## Are there differences in activity patterns between weekdays and weekends?\n### Create a new factor variable with two levels to differentiate between weekends and weekdays\n```{r}\ndayofweek<-ifelse(weekdays(as.POSIXct(newactivity$date)) %in% c(\"Saturday\",\"Sunday\"),\"weekend\",\"weekday\")\nnewactivity<-cbind(newactivity,dayofweek)\n```\n\n### Create table which contains the average steps taken for each type of day (weekend/weekday). \n```{r}\nstepsbyintervaldow<-aggregate(steps ~ interval + dayofweek, data=newactivity, mean)\n```\n\n### Build panel plot to compare weekend and weekday steps by interval\n```{r latplot,fig.width=10}\nlibrary(lattice)\nxyplot(steps ~ interval | dayofweek,data=stepsbyintervaldow,type=\"l\",\n       main=\"Average Steps taken in each interval, by Weekend/Weekday\",\n       xlab=\"Interval\",\n       ylab=\"Steps (Average)\")\n```\n\n\n",
    "created" : 1402837398776.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2653428171",
    "id" : "939A3125",
    "lastKnownWriteTime" : 1402847248,
    "path" : "~/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}